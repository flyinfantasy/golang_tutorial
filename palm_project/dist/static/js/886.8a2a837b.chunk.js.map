{"version":3,"file":"static/js/886.8a2a837b.chunk.js","mappings":"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","sources":["container/DashBoard/DashBoard.tsx"],"sourcesContent":["import { memo, FunctionComponent, useState, ChangeEvent, useContext, useEffect } from \"react\";\nimport { NavigateFunction, Outlet,useLocation, useNavigate } from \"react-router-dom\";\nimport XLSX from 'xlsx-js-style'\nimport { Container, actionCreator,returnStateType } from \".\";\nimport { actionCreator as wrongSendMessageActionCreator } from './children/WrongSendMessage'\nimport { ContextProps } from \"../../App\";\nimport pigeonClubCodeList from '../../asset/pigeonClubCodeList.json' // 臨時設定後端 api 完成後會移除\nimport sha1 from 'sha-1'\n\ninterface topBarItemType {\n    barName: string,\n    barPage: string,\n    barIndexName: string\n    barBottomTextGroup: string[]\n}\n\ninterface pageStateType {\n    selectDateVal: string\n    selectPigeonLoftVal: string\n    pigeonClubName: string\n    filterOverTime: string\n    togglePigeonLoftList:boolean\n}\nconst DashBoard: FunctionComponent = (): JSX.Element => {\n    const { $, getReducer, setReducer } = useContext(ContextProps)\n    const router: NavigateFunction = useNavigate()\n    const { pathname } = useLocation()\n    const [,,currentPath] = pathname.split('/')\n\n    const env: boolean = process.env.REACT_APP_NODE_ENV === 'pdt'\n\n    const {\n        pigeonLoftCode,\n        clubCode,\n        choiceDate,\n        pHouseCount,\n        pCount,\n        pBackCount,\n        pBackHomeCount,\n        pDate,\n        pigeonInductionData,\n        wrongPigeonInductionData,\n        reflashCount\n    } = getReducer<returnStateType>(({ dashBoard, login, dashBoardChildCurrentBack,dashBoardChildWrongSendMessage }) => ({\n        pigeonLoftCode: dashBoard.pigeonLoftCode,\n        clubCode: login.loginInfo.fromListClub || login.loginInfo.club,\n        choiceDate: dashBoard.choiceDate,\n        pHouseCount: '0',\n        pCount: '0',\n        pBackCount: dashBoardChildCurrentBack.pigeonInductionData.length,\n        pBackHomeCount: dashBoard.pigeonInductionDataHouseCount,\n        pDate: login.loginInfo.currentDate,\n        pigeonInductionData:dashBoardChildCurrentBack.pigeonInductionData,\n        wrongPigeonInductionData:dashBoardChildWrongSendMessage.wrongPigeonInductionData,\n        reflashCount: dashBoard.reflashCount\n    }))\n\n    const [{\n        selectDateVal,\n        selectPigeonLoftVal,\n        pigeonClubName,\n        togglePigeonLoftList,\n        filterOverTime\n    }, setPageState] = useState<pageStateType>({\n        selectDateVal: pDate,\n        selectPigeonLoftVal: '',\n        pigeonClubName: '',\n        togglePigeonLoftList:false,\n        filterOverTime: '5'\n    })\n\n    const topBarItem: {\n        current_back:topBarItemType,\n        wrong_send_message:topBarItemType,\n        pigeon_status:topBarItemType,\n        // setting:topBarItemType\n    } = {\n        current_back: {\n            barName: '即時歸返狀況',\n            barPage: '/dashboard/current_back',\n            barIndexName: 'current_back',\n            barBottomTextGroup: ['● 返回作業 / 即時返鴿狀況', '(資料僅供參考，成績結果依鴿會公佈為主)']\n        },\n        wrong_send_message: {\n            barName: '異常傳輸訊息',\n            barPage: '/dashboard/wrong_send_message',\n            barIndexName: 'wrong_send_message',\n            barBottomTextGroup: ['● 異常作業 / 異常傳輸訊息', '(資料僅供參考，各項異常訊息顯示)']\n        },\n        pigeon_status: {\n            barName: '鴿舍狀態查詢',\n            barPage: '/dashboard/pigeon_status',\n            barIndexName: 'pigeon_status',\n            barBottomTextGroup: ['● 鴿舍作業 / 鴿舍狀態', '(資料僅供參考，當前鴿舍狀態)']\n        },\n        // setting: {\n        //     barName: '參數設定',\n        //     barPage: '/dashboard/setting',\n        //     barIndexName: 'setting',\n        //     barBottomTextGroup: ['● 後台作業 / 參數設定', '(設定相關參數與資料匯入)']\n        // }\n    }\n\n    const goCurrentTable: (barPage: string) => void = barPage => {        \n        router({ pathname: barPage })\n    }\n\n    const setVal: (valType: string, { target: { value } }: ChangeEvent<HTMLSelectElement | HTMLInputElement>) => void = (valType, { target: { value } }) => {\n        valType === 'selectDateVal' && setChoice('selectDateVal',value)\n\n        setPageState(prevState => {\n            const prevStateTemp: pageStateType = JSON.parse(JSON.stringify(prevState));\n            (prevStateTemp as { [key: string]: any })[valType] = value;\n            return prevStateTemp\n        })\n    }\n\n    const setChoice: (valType: string, val?: string,_?:any) => void = (valType, val, _) => {\n        if (valType === 'selectDateVal') {\n            setReducer<string>(actionCreator, 'setChoiceDate', val)\n        }\n\n        if (valType === 'selectPigeonLoftVal') {\n            setTimeout(() => {\n                setReducer<string>(actionCreator, 'setPigeonLoftCode', val)\n                setPageState(prevState => ({\n                    ...prevState,\n                    selectPigeonLoftVal: val!,\n                    togglePigeonLoftList: false\n                }))\n            },201)   \n        }\n\n        if (valType === 'filterOverTime') {\n            if(parseInt(filterOverTime).constructor.name === 'Number'){\n                if(parseInt(filterOverTime) >= 5 && parseInt(filterOverTime) <= 15){\n                    setReducer(wrongSendMessageActionCreator,'getPigeonInductionData',{ club: clubCode, date: choiceDate || pDate, filterOverTime: parseInt(filterOverTime) })\n                    setReducer(actionCreator,'setFilterOverTime',parseInt(filterOverTime))\n                } else {\n                    alert('可設定時間區間為 5 ~ 15 分鐘')\n                }\n            }\n        }\n    }\n\n    const setCurrentPigeonClubName: (pigeonClubCode: string) => void = pigeonClubCode => {\n        const [filterItem] = $.filter(pigeonClubCodeList, (item: { [key: string]: any }) => item.pigeonClubCode === pigeonClubCode)\n\n        filterItem && setPageState(prevState => ({\n            ...prevState,\n            pigeonClubName: `${filterItem.pigeonClubName}鴿會`\n        }))\n    }\n\n    const exportExcel:() => void = () => {\n        const pasd = prompt('請輸入密碼')!\n        \n        if(pasd){\n            const newHash = sha1(pasd)\n\n            const data = currentPath === 'current_back' ? pigeonInductionData : wrongPigeonInductionData\n            const xlsxName = currentPath === 'current_back' ? '即時歸返狀況' : '異常傳輸訊息'\n\n            if(newHash === '2eb405c63b0b7340a82bcd35430072ad947a66c9'){\n\n                if(data.length > 0){\n                    const workBook = XLSX.utils.book_new();\n\n                    const prepareExcelData:{[key: string]: any}[][] = $.maps(data,(item => ([\n                        { v:item.pigeon_loft,t:'s',s:{ font:{ name:'Segoe UI',sz:16 } } },\n                        { v:item.pigeon_number,t:'s',s:{ font:{ name:'Segoe UI',sz:16 } } },\n                        { v:item.pigeon_aluminum,t:'s',s:{ font:{ name:'Segoe UI',sz:16 } } },\n                        { v:item.reset_get_web_Induction_date,t:'s',s:{ font:{ name:'Segoe UI',sz:16 } } },\n                        { v:item.reset_error_range_time.split('|').at(1),t:'s',s:{ font:{ name:'Segoe UI',sz:16 } } },\n                        { v:item.reset_induction_date,t:'s',s:{ font:{ name:'Segoe UI',sz:16 } } }\n                    ])));\n\n                    const headerRows = [\n                        { v:'鴿舍編號',t:\"s\",s:{ font:{ name:'Segoe UI' } } },\n                        { v:'環號',t:\"s\",s:{ font:{ name:'Segoe UI' } } },\n                        { v:'鋁片號碼',t:\"s\",s:{ font:{ name:'Segoe UI' } } },\n                        { v:'鴿鐘時間',t:\"s\",s:{ font:{ name:'Segoe UI' } } },\n                        { v:'誤差時間',t:\"s\",s:{ font:{ name:'Segoe UI' } } },\n                        { v:'掌中寶時間',t:\"s\",s:{ font:{ name:'Segoe UI' } } },\n                    ]\n\n                    const sheet1 = XLSX.utils.aoa_to_sheet([headerRows,...prepareExcelData])\n                    \n                    XLSX.utils.book_append_sheet(workBook,sheet1,`${clubCode}_${pigeonClubName}_${choiceDate || pDate}_${xlsxName}`);\n                    \n                    sheet1[\"!cols\"] = [{ width:10 },{ width:13 },{ width:16 },{ width:29 },{ width:13 },{ width:29 }]\n                    sheet1[\"!rows\"] = [{ hpx: 18 },...$.createArray({ type:'fake',item:{ random:prepareExcelData.length }},() => ({ hpx:40 }))!]\n\n                    XLSX.writeFile(workBook, `${clubCode}_${pigeonClubName}_${choiceDate || pDate}_${xlsxName}.xlsx`);\n                } else {\n                    alert(`當日無${currentPath === 'current_back' ? '即時歸返' : '異常傳輸'}資料`)\n                }\n            } else {\n                alert('密碼錯誤 !')\n            }\n        }\n    }\n\n    useEffect(() => {\n        clubCode ? setCurrentPigeonClubName(clubCode) : router({ pathname:'/login' })\n    }, [clubCode])\n\n    return (\n        <Container>\n            <div className=\"top-bar-group\">\n                <div className=\"top\">\n                    <div className=\"row align-items-center\">\n                        <div className=\"col-md-6\">\n                            <div className=\"img-outer\">\n                                <img src={`${process.env.PUBLIC_URL}/images/Logo.png`} alt=\"\" />\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className=\"row justify-content-center mb-3\">\n                                <div className=\"secode-title\">{pigeonClubName || '無此鴿會'}</div>\n                                <div className=\"select-group\">\n                                    <div className=\"select-date-bar\">\n                                        <div className=\"select-date-label\">查詢日期</div>\n                                        <div className=\"select-date-outer\">\n                                            <input type=\"date\" value={selectDateVal} onChange={setVal.bind(this, 'selectDateVal')} />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-3\">\n                            <div className=\"show-current-total\">\n                                <div>\n                                    <span>集鴿</span>\n                                    <span>{env ? 'YYY' : pHouseCount} 舍 / {env ? 'XXX' : pCount} 羽</span>\n                                </div>\n                                <div>\n                                    <span>歸返</span>\n                                    <span>{pBackHomeCount} 舍 / {pBackCount} 羽</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"bottom\">\n                    <div className=\"row align-items-center g-0\">\n                        {$.maps($.objDetails(topBarItem,'keys') as string[],(keyName:string,index) => (\n                            <div className=\"col-md-4\" key={index}>\n                                <div \n                                    className={currentPath === (topBarItem as {[key:string]:any})[keyName].barIndexName ? \"bottom-btn active\" : \"bottom-btn\"} \n                                    onClick={goCurrentTable.bind(this, (topBarItem as {[key:string]:any})[keyName].barPage, (topBarItem as {[key:string]:any})[keyName].barIndexName)}\n                                >\n                                    {(topBarItem as {[key:string]:any})[keyName].barName}\n                                </div>\n                            </div>\n                        ))}\n                        <div className=\"bottom-groups\">\n                            <div className=\"bottom-left\">\n                                <span>{(topBarItem as {[key:string]:any})[currentPath].barBottomTextGroup.at(0)}</span>&nbsp;\n                                <span>{(topBarItem as {[key:string]:any})[currentPath].barBottomTextGroup.at(1)}</span>\n                            </div>\n                            {window.innerWidth > 414 ? (\n                                <div className={currentPath === 'wrong_send_message' ? 'bottom-right with-filter-over-time' : currentPath === 'pigeon_status' ? 'bottom-right to-less' : 'bottom-right'}>\n                                    <div className=\"reflash-text-outer\">\n                                        <div className=\"reflash-text\"><span>{reflashCount}</span> 秒後刷新</div>\n                                    </div>\n                                    {<div className=\"select-with-search-bar\">\n                                        <div className=\"select-type-outer\">\n                                            <input \n                                                type=\"text\" \n                                                value={selectPigeonLoftVal}\n                                                placeholder='-- 篩選鴿舍編號 --'\n                                                onClick={() => setPageState(prevState => ({ ...prevState,togglePigeonLoftList:true }))}\n                                                onKeyDown={(e) => e.keyCode === 13 && setChoice('selectPigeonLoftVal',selectPigeonLoftVal) }\n                                                onBlur={setChoice.bind(this,'selectPigeonLoftVal',selectPigeonLoftVal)} \n                                                onChange={setVal.bind(this, 'selectPigeonLoftVal')}\n                                            />\n                                            <div className={togglePigeonLoftList ? 'select-list-outer-frame active' : 'select-list-outer-frame'}>\n                                                <div className=\"select-list-outer\">\n                                                    <div className=\"select-list\">\n                                                        <div className={!selectPigeonLoftVal ? 'active' : ''} onClick={setChoice.bind(this,'selectPigeonLoftVal','')}>全部</div>\n                                                        {$.maps(pigeonLoftCode,(codes: string, index: number) => (\n                                                            <div className={selectPigeonLoftVal === codes ? 'active' : ''} onClick={setChoice.bind(this,'selectPigeonLoftVal',codes)} key={index} >{codes}</div>\n                                                        ))}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>}\n                                    {currentPath === 'wrong_send_message' && (\n                                        <div className='selete-time-outer'>\n                                            <span>逾時</span>\n                                            <input \n                                                type='number'\n                                                value={filterOverTime}\n                                                onWheel={(event) => (event.target as HTMLInputElement).blur()}\n                                                onBlur={setChoice.bind(this,'filterOverTime',filterOverTime)}\n                                                onChange={setVal.bind(this, 'filterOverTime')}\n                                            />\n                                            <span>分鐘</span>\n                                        </div>\n                                    )}\n                                    {currentPath !== 'pigeon_status' && <div className=\"convert-excel-btn\" onClick={exportExcel}>匯出 Excel</div>}\n                                </div>) : (\n                                <div className={currentPath === 'wrong_send_message' ? 'bottom-right with-filter-over-time' : currentPath === 'pigeon_status' ? 'bottom-right to-less' : 'bottom-right'}>\n                                    {currentPath === 'wrong_send_message' ? (\n                                        <>\n                                            <div className=\"reflash-text-outer\">\n                                                <div className=\"reflash-text\"><span>{reflashCount}</span> 秒後刷新</div>\n                                            </div>\n                                            <div className=\"convert-excel-btn\" onClick={exportExcel}>匯出 Excel</div>\n                                            <div className=\"select-with-search-bar\">\n                                                <div className=\"select-type-outer\">\n                                                    <input \n                                                        type=\"text\" \n                                                        value={selectPigeonLoftVal}\n                                                        placeholder='-- 篩選鴿舍編號 --'\n                                                        onClick={() => setPageState(prevState => ({ ...prevState,togglePigeonLoftList:true }))}\n                                                        onKeyDown={(e) => e.keyCode === 13 && setChoice('selectPigeonLoftVal',selectPigeonLoftVal) }\n                                                        onBlur={setChoice.bind(this,'selectPigeonLoftVal',selectPigeonLoftVal)} \n                                                        onChange={setVal.bind(this, 'selectPigeonLoftVal')}\n                                                    />\n                                                    <div className={togglePigeonLoftList ? 'select-list-outer-frame active' : 'select-list-outer-frame'}>\n                                                        <div className=\"select-list-outer\">\n                                                            <div className=\"select-list\">\n                                                                <div className={!selectPigeonLoftVal ? 'active' : ''} onClick={setChoice.bind(this,'selectPigeonLoftVal','')}>全部</div>\n                                                                {$.maps(pigeonLoftCode,(codes: string, index: number) => (\n                                                                    <div className={selectPigeonLoftVal === codes ? 'active' : ''} onClick={setChoice.bind(this,'selectPigeonLoftVal',codes)} key={index} >{codes}</div>\n                                                                ))}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className='selete-time-outer'>\n                                                <span>逾時</span>\n                                                <input \n                                                    type='number'\n                                                    value={filterOverTime}\n                                                    onWheel={(event) => (event.target as HTMLInputElement).blur()}\n                                                    onBlur={setChoice.bind(this,'filterOverTime',filterOverTime)}\n                                                    onChange={setVal.bind(this, 'filterOverTime')}\n                                                />\n                                                <span>分鐘</span>\n                                            </div>\n                                        </>\n                                    ) : (\n                                    <>\n                                        <div className=\"reflash-text-outer\">\n                                            <div className=\"reflash-text\"><span>{reflashCount}</span> 秒後刷新</div>\n                                        </div>\n                                        <div className=\"select-with-search-bar\">\n                                            <div className=\"select-type-outer\">\n                                                <input \n                                                    type=\"text\" \n                                                    value={selectPigeonLoftVal}\n                                                    placeholder='-- 篩選鴿舍編號 --'\n                                                    onClick={() => setPageState(prevState => ({ ...prevState,togglePigeonLoftList:true }))}\n                                                    onKeyDown={(e) => e.keyCode === 13 && setChoice('selectPigeonLoftVal',selectPigeonLoftVal) }\n                                                    onBlur={setChoice.bind(this,'selectPigeonLoftVal',selectPigeonLoftVal)} \n                                                    onChange={setVal.bind(this, 'selectPigeonLoftVal')}\n                                                />\n                                                <div className={togglePigeonLoftList ? 'select-list-outer-frame active' : 'select-list-outer-frame'}>\n                                                    <div className=\"select-list-outer\">\n                                                        <div className=\"select-list\">\n                                                            <div className={!selectPigeonLoftVal ? 'active' : ''} onClick={setChoice.bind(this,'selectPigeonLoftVal','')}>全部</div>\n                                                            {$.maps(pigeonLoftCode,(codes: string, index: number) => (\n                                                                <div className={selectPigeonLoftVal === codes ? 'active' : ''} onClick={setChoice.bind(this,'selectPigeonLoftVal',codes)} key={index} >{codes}</div>\n                                                            ))}\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        {currentPath !== 'pigeon_status' && <div className=\"convert-excel-btn\" onClick={exportExcel}>匯出 Excel</div>}\n                                    </>)}\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"tables-container\">\n                <Outlet />\n            </div>\n        </Container>\n    )\n}\n\nexport default memo(DashBoard)"],"names":["DashBoard","_useContext","useContext","ContextProps","$","getReducer","setReducer","router","useNavigate","_pathname$split","useLocation","pathname","split","currentPath","_slicedToArray","_getReducer","_ref","dashBoard","login","dashBoardChildCurrentBack","dashBoardChildWrongSendMessage","pigeonLoftCode","clubCode","loginInfo","fromListClub","club","choiceDate","pHouseCount","pCount","pBackCount","pigeonInductionData","length","pBackHomeCount","pigeonInductionDataHouseCount","pDate","currentDate","wrongPigeonInductionData","reflashCount","_useState","useState","selectDateVal","selectPigeonLoftVal","pigeonClubName","togglePigeonLoftList","filterOverTime","_useState2","_useState2$","setPageState","topBarItem","current_back","barName","barPage","barIndexName","barBottomTextGroup","wrong_send_message","pigeon_status","goCurrentTable","setVal","valType","_ref2","value","target","setChoice","prevState","prevStateTemp","JSON","parse","stringify","val","_","actionCreator","setTimeout","_objectSpread","parseInt","constructor","name","wrongSendMessageActionCreator","date","alert","exportExcel","pasd","prompt","newHash","sha1","data","xlsxName","workBook","XLSX","prepareExcelData","maps","item","v","pigeon_loft","t","s","font","sz","pigeon_number","pigeon_aluminum","reset_get_web_Induction_date","reset_error_range_time","at","reset_induction_date","sheet1","concat","_toConsumableArray","width","hpx","createArray","type","random","useEffect","pigeonClubCode","_$$filter","filter","pigeonClubCodeList","filterItem","setCurrentPigeonClubName","_jsxs","Container","children","className","_jsx","src","process","alt","onChange","bind","_this","objDetails","keyName","index","onClick","window","innerWidth","placeholder","onKeyDown","e","keyCode","onBlur","codes","onWheel","event","blur","_Fragment","Outlet","memo"],"sourceRoot":""}