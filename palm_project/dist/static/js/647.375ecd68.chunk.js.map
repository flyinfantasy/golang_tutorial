{"version":3,"file":"static/js/647.375ecd68.chunk.js","mappings":"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","sources":["container/DashBoard/children/CurrentBack/CurrentBack.tsx"],"sourcesContent":["import { FC, useContext, useEffect, useRef, useState } from \"react\";\nimport { faSort } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { paginations } from \"../../../../component/TableField\";\nimport { TableField } from \"../../../../component\";\nimport { paginationOptions, paginationType, TableFieldProps } from \"../../../../component/TableField/types\";\nimport { ContextProps } from '../../../../App'\nimport { actionCreator,returnStateType, pigeonInductionDataType } from '.'\nimport { actionCreator as dashBoardActionCreator } from '../../'\n\nconst CurrentBack: FC = (): JSX.Element => {\n    const { $, setReducer, getReducer } = useContext(ContextProps)\n\n    const timer = useRef<NodeJS.Timer | null>(null)\n\n    const {\n        paginationObj,\n        paginationOptions,\n        pigeonInductionData,\n        // pigeonInductionDataInChoiceDate,\n        choiceDate,\n        choicePigeonLoftCode,\n        clubCode,\n        clubDate,\n        reflashCount\n    } = getReducer<returnStateType>(({ dashBoardChildCurrentBack, dashBoard, login }) => ({\n        paginationObj: dashBoardChildCurrentBack.paginationObj,\n        paginationOptions: dashBoardChildCurrentBack.paginationOptions,\n        pigeonInductionData: dashBoardChildCurrentBack.pigeonInductionData,\n        // pigeonInductionDataInChoiceDate: dashBoardChildCurrentBack.pigeonInductionDataInChoiceDate,\n        choiceDate: dashBoard.choiceDate,\n        choicePigeonLoftCode: dashBoard.choicePigeonLoftCode,\n        clubCode: login.loginInfo.fromListClub || login.loginInfo.club,\n        clubDate: login.loginInfo.currentDate,\n        reflashCount: dashBoard.reflashCount\n    }))\n\n    const [{\n        currentRenderItem,\n        sortColumn,\n        reverseSort\n    }, setPageState] = useState<{\n        currentRenderItem: any[]\n        sortColumn:string,\n        reverseSort:boolean\n    }>({\n        currentRenderItem: [],\n        sortColumn:'',\n        reverseSort: false\n    })\n\n    const gridHeaderText: { sortColumn:string,columnName:string }[] = [{\n        sortColumn:'rowNum',\n        columnName:'筆數'\n    },{\n        sortColumn:'pigeon_number',\n        columnName:'鴿舍編號'\n    },{\n        sortColumn:'',\n        columnName:'環號'\n    },{\n        sortColumn:'',\n        columnName:'鋁片號碼'\n    },{\n        sortColumn:'reset_get_web_Induction_date',\n        columnName:'鴿鐘時間'\n    },{\n        sortColumn:'reset_error_range_time',\n        columnName:'誤差時間'\n    },{\n        sortColumn:'reset_induction_date',\n        columnName:'掌中寶時間'\n    },{\n        sortColumn:'',\n        columnName:'UID'\n    },{\n        sortColumn:'',\n        columnName:'經緯度'\n    }]\n\n    const TableFieldProps: TableFieldProps = {\n        gridHeaderItem: {\n            gridHeaderWidth: ['minmax(85px, 5%)', 'minmax(85px, 8.33%)', 'minmax(105px, 8.33%)', 'minmax(110px, 8.33%)', 'minmax(156px, 12.5%)', 'minmax(156px, 12.5%)', 'minmax(156px, 12.5%)', 'minmax(202px, 16.25%)', 'minmax(202px, 16.25%)'],\n            renderHeaderItem: $.maps(gridHeaderText, ({ sortColumn,columnName }: { sortColumn:string,columnName:string }, index: number) => (\n                <div\n                    className={sortColumn ? 'use-sort' : ''}\n                    onClick={() => setPageState(prevState => ({ ...prevState,sortColumn,reverseSort: !reverseSort }))} \n                    key={index}\n                >{columnName}{sortColumn ? <FontAwesomeIcon icon={faSort} /> : ''}</div>\n            ))\n        },\n        gridBodyItem: {\n            renderBodyItem: currentRenderItem.length > 0 ? $.maps(currentRenderItem, (item: pigeonInductionDataType, index: number) => (\n                <div className={index % 2 !== 0 ? \"table-grid-body-column bg-double\" : \"table-grid-body-column bg-single\"} style={{\n                    gridTemplateColumns: 'minmax(85px, 5%) minmax(85px, 8.33%) minmax(105px, 8.33%) minmax(110px, 8.33%) minmax(156px, 12.5%) minmax(156px, 12.5%) minmax(156px, 12.5%) minmax(202px, 16.25%) minmax(202px, 16.25%)'\n                }} key={index}>\n                    <div>{item.rowNum}</div>\n                    <div className={item.pigeon_loft ? '' : 'red-sign'}>{item.pigeon_loft || '未感應掌中寶時間'}</div>\n                    <div>{item.pigeon_number}</div>\n                    <div>{item.pigeon_aluminum}</div>\n                    <div className={item.get_web_Induction_date ? '' : 'red-sign'}>{item.reset_get_web_Induction_date}</div>\n                    <div className={item.reset_error_range_time.split('|').at(0)}>{item.reset_error_range_time.split('|').at(1)}</div>\n                    <div className={item.induction_date ? '' : 'red-sign'}>{item.reset_induction_date}</div>\n                    <div>{item.aluminum_UID}</div>\n                    <div>{item.latitude}&nbsp;&nbsp;{item.longitude}</div>\n                </div>\n            )) : []\n        },\n        ...paginationObj,\n        postNext: pageObj => setReducer<paginationOptions>(actionCreator, 'setCurrentBackPaginationOptions', pageObj),\n    }\n\n    const filterRenderData: () => pigeonInductionDataType[] = () => {\n        const currentData = choicePigeonLoftCode ? $.filter(pigeonInductionData, (item: pigeonInductionDataType) => item.pigeon_loft.match(choicePigeonLoftCode)) : pigeonInductionData\n        \n        return $.sort([...currentData],(a:pigeonInductionDataType,b:pigeonInductionDataType):any => {\n            return {\n                '': a.rowNum! - b.rowNum!,\n                'rowNum': reverseSort ? b.rowNum! - a.rowNum! : a.rowNum! - b.rowNum!,\n                'pigeon_number': reverseSort ? parseInt(a.pigeon_loft) - parseInt(b.pigeon_loft) : parseInt(b.pigeon_loft) - parseInt(a.pigeon_loft),\n                'reset_get_web_Induction_date': reverseSort ? +new Date(a.reset_get_web_Induction_date) - +new Date(b.reset_get_web_Induction_date) : +new Date(b.reset_get_web_Induction_date) - +new Date(a.reset_get_web_Induction_date),\n                'reset_error_range_time': (() => {\n                    const prevRange = a.reset_error_range_time.split('|').at(-1)!\n                    const nextRange = b.reset_error_range_time.split('|').at(-1)!\n    \n                    return reverseSort ? parseInt(prevRange) - parseInt(nextRange) : parseInt(nextRange) - parseInt(prevRange)\n                })(),\n                'reset_induction_date': reverseSort ? +new Date(a.reset_induction_date === '請感應掌中寶' ? new Date() : a.reset_induction_date) - +new Date(b.reset_induction_date === '請感應掌中寶' ? new Date() : b.reset_induction_date) : +new Date(b.reset_induction_date === '請感應掌中寶' ? new Date() : b.reset_induction_date) - +new Date(a.reset_induction_date === '請感應掌中寶' ? new Date() : a.reset_induction_date),\n            }[sortColumn]\n        }) as pigeonInductionDataType[]\n    }\n\n    clearInterval(timer.current!)\n\n    timer.current = setInterval(() => {\n        if (reflashCount === 0) {\n            // if(caches){\n            //     caches.keys().then((names) => {\n            //         names.forEach((name) => {\n            //             caches.delete(name);\n            //         });\n            //     });\n            // }\n\n            setReducer(dashBoardActionCreator,'setReflashCount',10)\n\n            setReducer(actionCreator, 'getPigeonInductionData', { club: clubCode, date: choiceDate || clubDate })\n            // if (process.env.REACT_APP_NODE_ENV === 'pdt') {\n            //     choiceDate ? setReducer(actionCreator, 'getPigeonInductionInChoiceDate', choiceDate) : setReducer(actionCreator, 'getPigeonInductionData')\n            // } else {\n            //     // test server\n            //     // 臨時設定登入功能完成後會移除\n            //     choiceDate ? setReducer(actionCreator, 'getPigeonInductionInChoiceDateTest', { choiceDate, routerParmas: { club: clubCode, date: clubDate } }) : setReducer<any>(actionCreator, 'getPigeonInductionDataTest', { club: clubCode, date: clubDate })\n            // }\n            \n            // window.location.replace(pathname)\n        } else {\n            setReducer(dashBoardActionCreator,'setReflashCount',reflashCount - 1)\n        }\n    }, 1000)\n\n    useEffect(() => {\n        const { pages, partPage, pageSize } = paginationOptions\n        const { pageObj, renderItem } = paginations(filterRenderData(), pages, partPage, pageSize)\n\n        setPageState(prevState => ({\n            ...prevState,\n            currentRenderItem: renderItem\n        }))\n        setReducer<paginationType>(actionCreator, 'setCurrentBackPaginationObj', {...pageObj})\n    }, [paginationOptions, pigeonInductionData, choicePigeonLoftCode,reverseSort])\n\n    useEffect(() => {\n        setReducer(dashBoardActionCreator,'setReflashCount',10)\n    }, [choicePigeonLoftCode])\n\n    useEffect(() => {\n        setReducer(dashBoardActionCreator,'setReflashCount',10)\n\n        if(clubCode && clubDate) setReducer(actionCreator,'getPigeonInductionData', { club: clubCode, date: choiceDate || clubDate })\n            // choiceDate ? setReducer(actionCreator, 'getPigeonInductionInChoiceDate', { choiceDate, routerParmas: { club: clubCode, date: clubDate } }) : setReducer<any>(actionCreator, 'getPigeonInductionData', { club: clubCode, date: clubDate })\n        // if (process.env.REACT_APP_NODE_ENV === 'pdt') {\n        //     choiceDate ? setReducer(actionCreator, 'getPigeonInductionInChoiceDate', choiceDate) : setReducer(actionCreator, 'getPigeonInductionData')\n        // } else {\n        //     // test server\n        //     // 臨時設定登入功能完成後會移除\n        //     if(!clubCode && !clubDate) return\n        //     choiceDate ? setReducer(actionCreator, 'getPigeonInductionInChoiceDateTest', { choiceDate, routerParmas: { club: clubCode, date: clubDate } }) : setReducer<any>(actionCreator, 'getPigeonInductionDataTest', { club: clubCode, date: clubDate })\n        // }\n    }, [choiceDate,reverseSort])\n\n    // useEffect(() => {\n    //     // test server\n    //     // 臨時設定登入功能完成後會移除\n    //     if(!clubCode && !clubDate) return\n    //     setReducer<any>(actionCreator, 'getPigeonInductionData', { club: clubCode, date: clubDate })\n    // }, [])\n\n    useEffect(() => {\n        if(!clubCode && !clubDate) return\n\n        setReducer(dashBoardActionCreator,'setReflashCount',10)\n\n        setReducer<paginationOptions>(actionCreator, 'setCurrentBackPaginationOptions', {\n            pages: 1,\n            partPage: 10,\n            pageSize: 10\n        })\n\n        setReducer(actionCreator, 'getPigeonInductionData',{ club: clubCode, date: choiceDate || clubDate })\n\n        return () => {\n            clearInterval(timer.current!)\n            // setReducer<string>(dashBoardActionCreator, 'setChoiceDate', '')\n            // setReducer<string>(dashBoardActionCreator, 'setPigeonLoftCode', '')\n        }\n    }, [clubCode,clubDate])\n\n    return (\n        <TableField {...TableFieldProps} />\n    )\n}\n\nexport default CurrentBack"],"names":["_useContext","useContext","ContextProps","$","setReducer","getReducer","timer","useRef","_getReducer","_ref","dashBoardChildCurrentBack","dashBoard","login","paginationObj","paginationOptions","pigeonInductionData","choiceDate","choicePigeonLoftCode","clubCode","loginInfo","fromListClub","club","clubDate","currentDate","reflashCount","_useState","useState","currentRenderItem","sortColumn","reverseSort","_useState2","_slicedToArray","_useState2$","setPageState","TableFieldProps","_objectSpread","gridHeaderItem","gridHeaderWidth","renderHeaderItem","maps","columnName","_ref2","index","_jsxs","className","onClick","prevState","children","_jsx","FontAwesomeIcon","icon","faSort","gridBodyItem","renderBodyItem","length","item","style","gridTemplateColumns","rowNum","pigeon_loft","pigeon_number","pigeon_aluminum","get_web_Induction_date","reset_get_web_Induction_date","reset_error_range_time","split","at","induction_date","reset_induction_date","aluminum_UID","latitude","longitude","postNext","pageObj","actionCreator","clearInterval","current","setInterval","dashBoardActionCreator","date","useEffect","pages","partPage","pageSize","_paginations","paginations","currentData","filter","match","sort","_toConsumableArray","a","b","parseInt","Date","prevRange","nextRange","filterRenderData","renderItem","TableField"],"sourceRoot":""}