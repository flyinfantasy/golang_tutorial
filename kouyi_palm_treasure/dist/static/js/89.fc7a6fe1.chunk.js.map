{"version":3,"file":"static/js/89.fc7a6fe1.chunk.js","mappings":"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","sources":["container/DashBoard/children/WrongSendMessage/WrongSendMessage.tsx"],"sourcesContent":["import { FC, useContext, useEffect, useRef, useState } from \"react\";\r\nimport { faSort } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { paginations } from \"../../../../component/TableField\";\r\nimport { TableField } from \"../../../../component\";\r\nimport { paginationOptions, paginationType, TableFieldProps } from \"../../../../component/TableField/types\";\r\nimport { ContextProps } from '../../../../App'\r\nimport { returnStateType, pigeonInductionDataType } from \"./types\";\r\nimport { actionCreator } from '.'\r\nimport { actionCreator as dashBoardActionCreator } from '../../'\r\n\r\nconst WrongSendMessage:FC = ():JSX.Element => {\r\n    const { $, setReducer, getReducer } = useContext(ContextProps)\r\n\r\n    const timer = useRef<NodeJS.Timer | null>(null)\r\n\r\n    const {\r\n        paginationObj,\r\n        paginationOptions,\r\n        wrongPigeonInductionData,\r\n        // pigeonInductionDataInChoiceDate,\r\n        choiceDate,\r\n        choicePigeonLoftCode,\r\n        clubCode,\r\n        clubDate,\r\n        reflashCount,\r\n        filterOverTime\r\n    } = getReducer<returnStateType>(({ dashBoardChildWrongSendMessage, dashBoard, login }) => ({\r\n        paginationObj: dashBoardChildWrongSendMessage.paginationObj,\r\n        paginationOptions: dashBoardChildWrongSendMessage.paginationOptions,\r\n        wrongPigeonInductionData: dashBoardChildWrongSendMessage.wrongPigeonInductionData,\r\n        // pigeonInductionDataInChoiceDate: dashBoardChildWrongSendMessage.pigeonInductionDataInChoiceDate,\r\n        choiceDate: dashBoard.choiceDate,\r\n        choicePigeonLoftCode: dashBoard.choicePigeonLoftCode,\r\n        clubCode: login.loginInfo.fromListClub || login.loginInfo.club,\r\n        clubDate: login.loginInfo.currentDate,\r\n        reflashCount: dashBoard.reflashCount,\r\n        filterOverTime: dashBoard.filterOverTime\r\n    }))\r\n\r\n    const [{\r\n        currentRenderItem,\r\n        sortColumn,\r\n        reverseSort\r\n    }, setPageState] = useState<{\r\n        currentRenderItem: any[]\r\n        sortColumn:string,\r\n        reverseSort:boolean\r\n    }>({\r\n        currentRenderItem: [],\r\n        sortColumn:'',\r\n        reverseSort: false\r\n    })\r\n\r\n    const gridHeaderText: { sortColumn:string,columnName:string }[] = [{\r\n        sortColumn:'rowNum',\r\n        columnName:'筆數'\r\n    },{\r\n        sortColumn:'pigeon_number',\r\n        columnName:'鴿舍編號'\r\n    },{\r\n        sortColumn:'',\r\n        columnName:'環號'\r\n    },{\r\n        sortColumn:'',\r\n        columnName:'鋁片號碼'\r\n    },{\r\n        sortColumn:'reset_get_web_Induction_date',\r\n        columnName:'鴿鐘時間'\r\n    },{\r\n        sortColumn:'reset_error_range_time',\r\n        columnName:'誤差時間'\r\n    },{\r\n        sortColumn:'reset_induction_date',\r\n        columnName:'掌中寶時間'\r\n    },{\r\n        sortColumn:'',\r\n        columnName:'UID'\r\n    },{\r\n        sortColumn:'',\r\n        columnName:'經緯度'\r\n    }]\r\n\r\n    const TableFieldProps: TableFieldProps = {\r\n        gridHeaderItem: {\r\n            gridHeaderWidth: ['minmax(85px, 5%)', 'minmax(85px, 8.33%)', 'minmax(105px, 8.33%)', 'minmax(110px, 8.33%)', 'minmax(156px, 12.5%)', 'minmax(156px, 12.5%)', 'minmax(156px, 12.5%)', 'minmax(202px, 16.25%)', 'minmax(202px, 16.25%)'],\r\n            renderHeaderItem: $.maps(gridHeaderText, ({ sortColumn,columnName }: { sortColumn:string,columnName:string }, index: number) => (\r\n                <div\r\n                    className={sortColumn ? 'use-sort' : ''}\r\n                    onClick={() => setPageState(prevState => ({ ...prevState,sortColumn,reverseSort: !reverseSort }))} \r\n                    key={index}\r\n                >{columnName}{sortColumn ? <FontAwesomeIcon icon={faSort} /> : ''}</div>\r\n            ))\r\n        },\r\n        gridBodyItem: {\r\n            renderBodyItem: currentRenderItem.length > 0 ? $.maps(currentRenderItem, (item: pigeonInductionDataType, index: number) => (\r\n                <div className={index % 2 !== 0 ? \"table-grid-body-column bg-double\" : \"table-grid-body-column bg-single\"} style={{\r\n                    gridTemplateColumns: 'minmax(85px, 5%) minmax(85px, 8.33%) minmax(105px, 8.33%) minmax(110px, 8.33%) minmax(156px, 12.5%) minmax(156px, 12.5%) minmax(156px, 12.5%) minmax(202px, 16.25%) minmax(202px, 16.25%)'\r\n                }} key={index}>\r\n                    <div>{item.rowNum}</div>\r\n                    <div className={item.pigeon_loft ? '' : 'red-sign'}>{item.pigeon_loft || '未感應掌中寶時間'}</div>\r\n                    <div>{item.pigeon_number}</div>\r\n                    <div>{item.pigeon_aluminum}</div>\r\n                    <div className={item.get_web_Induction_date ? '' : 'red-sign'}>{item.reset_get_web_Induction_date}</div>\r\n                    <div className={item.reset_error_range_time.split('|').at(0)}>{item.reset_error_range_time.split('|').at(1)}</div>\r\n                    <div className={item.induction_date ? '' : 'red-sign'}>{item.reset_induction_date}</div>\r\n                    <div>{item.aluminum_UID}</div>\r\n                    <div>{item.latitude}&nbsp;&nbsp;{item.longitude}</div>\r\n                </div>\r\n            )) : []\r\n        },\r\n        ...paginationObj,\r\n        postNext: pageObj => setReducer<paginationOptions>(actionCreator, 'setWrongSendMessagePaginationOptions', pageObj),\r\n    }\r\n\r\n    const filterRenderData: () => pigeonInductionDataType[] = () => {\r\n        const currentData = choicePigeonLoftCode ? $.filter(wrongPigeonInductionData, (item: pigeonInductionDataType) => item.pigeon_loft.match(choicePigeonLoftCode)) : wrongPigeonInductionData\r\n        \r\n        return $.sort([...currentData],(a:pigeonInductionDataType,b:pigeonInductionDataType):any => {\r\n            return {\r\n                '': a.rowNum! - b.rowNum!,\r\n                'rowNum': reverseSort ? b.rowNum! - a.rowNum! : a.rowNum! - b.rowNum!,\r\n                'pigeon_number': reverseSort ? parseInt(a.pigeon_loft) - parseInt(b.pigeon_loft) : parseInt(b.pigeon_loft) - parseInt(a.pigeon_loft),\r\n                'reset_get_web_Induction_date': reverseSort ? +new Date(a.reset_get_web_Induction_date) - +new Date(b.reset_get_web_Induction_date) : +new Date(b.reset_get_web_Induction_date) - +new Date(a.reset_get_web_Induction_date),\r\n                'reset_error_range_time': (() => {\r\n                    const prevRange = a.reset_error_range_time.split('|').at(-1)!\r\n                    const nextRange = b.reset_error_range_time.split('|').at(-1)!\r\n    \r\n                    return reverseSort ? parseInt(prevRange) - parseInt(nextRange) : parseInt(nextRange) - parseInt(prevRange)\r\n                })(),\r\n                'reset_induction_date': reverseSort ? +new Date(a.reset_induction_date === '請感應掌中寶' ? new Date() : a.reset_induction_date) - +new Date(b.reset_induction_date === '請感應掌中寶' ? new Date() : b.reset_induction_date) : +new Date(b.reset_induction_date === '請感應掌中寶' ? new Date() : b.reset_induction_date) - +new Date(a.reset_induction_date === '請感應掌中寶' ? new Date() : a.reset_induction_date),\r\n            }[sortColumn]\r\n        }) as pigeonInductionDataType[]\r\n    }\r\n\r\n    clearInterval(timer.current!)\r\n\r\n    timer.current = setInterval(() => {\r\n        if (reflashCount === 0) {\r\n            // if(caches){\r\n            //     caches.keys().then((names) => {\r\n            //         names.forEach((name) => {\r\n            //             caches.delete(name);\r\n            //         });\r\n            //     });\r\n            // }\r\n\r\n            setReducer(dashBoardActionCreator,'setReflashCount',10)\r\n\r\n            setReducer(actionCreator, 'getPigeonInductionData', { club: clubCode, date: choiceDate || clubDate, filterOverTime })\r\n            // if (process.env.REACT_APP_NODE_ENV === 'pdt') {\r\n            //     choiceDate ? setReducer(actionCreator, 'getPigeonInductionInChoiceDate', choiceDate) : setReducer(actionCreator, 'getPigeonInductionData')\r\n            // } else {\r\n            //     // test server\r\n            //     // 臨時設定登入功能完成後會移除\r\n            //     choiceDate ? setReducer(actionCreator, 'getPigeonInductionInChoiceDateTest', { choiceDate, routerParmas: { club: clubCode, date: clubDate } }) : setReducer<any>(actionCreator, 'getPigeonInductionDataTest', { club: clubCode, date: clubDate })\r\n            // }\r\n            \r\n            // window.location.replace(pathname)\r\n        } else {\r\n            setReducer(dashBoardActionCreator,'setReflashCount',reflashCount - 1)\r\n        }\r\n    }, 1000)\r\n\r\n    useEffect(() => {\r\n        const { pages, partPage, pageSize } = paginationOptions\r\n        const { pageObj, renderItem } = paginations(filterRenderData(), pages, partPage, pageSize)\r\n\r\n        setPageState(prevState => ({\r\n            ...prevState,\r\n            currentRenderItem: renderItem\r\n        }))\r\n        setReducer<paginationType>(actionCreator, 'setWrongSendMessagePaginationObj', {...pageObj})\r\n    }, [paginationOptions, wrongPigeonInductionData, choicePigeonLoftCode,reverseSort])\r\n\r\n    useEffect(() => {\r\n        setReducer(dashBoardActionCreator,'setReflashCount',10)\r\n    }, [choicePigeonLoftCode])\r\n\r\n    useEffect(() => {\r\n        setReducer(dashBoardActionCreator,'setReflashCount',10)\r\n\r\n        if(clubCode && clubDate) setReducer(actionCreator,'getPigeonInductionData', { club: clubCode, date: choiceDate || clubDate, filterOverTime })\r\n            // choiceDate ? setReducer(actionCreator, 'getPigeonInductionInChoiceDate', { choiceDate, routerParmas: { club: clubCode, date: clubDate } }) : setReducer<any>(actionCreator, 'getPigeonInductionData', { club: clubCode, date: clubDate })\r\n        // if (process.env.REACT_APP_NODE_ENV === 'pdt') {\r\n        //     choiceDate ? setReducer(actionCreator, 'getPigeonInductionInChoiceDate', choiceDate) : setReducer(actionCreator, 'getPigeonInductionData')\r\n        // } else {\r\n        //     // test server\r\n        //     // 臨時設定登入功能完成後會移除\r\n        //     if(!clubCode && !clubDate) return\r\n        //     choiceDate ? setReducer(actionCreator, 'getPigeonInductionInChoiceDateTest', { choiceDate, routerParmas: { club: clubCode, date: clubDate } }) : setReducer<any>(actionCreator, 'getPigeonInductionDataTest', { club: clubCode, date: clubDate })\r\n        // }\r\n    }, [choiceDate,reverseSort])\r\n\r\n    // useEffect(() => {\r\n    //     // test server\r\n    //     // 臨時設定登入功能完成後會移除\r\n    //     if(!clubCode && !clubDate) return\r\n    //     setReducer<any>(actionCreator, 'getPigeonInductionData', { club: clubCode, date: clubDate })\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        if(!clubCode && !clubDate) return\r\n\r\n        setReducer(dashBoardActionCreator,'setReflashCount',10)\r\n\r\n        setReducer<paginationOptions>(actionCreator, 'setWrongSendMessagePaginationOptions', {\r\n            pages: 1,\r\n            partPage: 10,\r\n            pageSize: 10\r\n        })\r\n\r\n        setReducer(actionCreator, 'getPigeonInductionData',{ club: clubCode, date: choiceDate || clubDate, filterOverTime })\r\n\r\n        return () => {\r\n            clearInterval(timer.current!)\r\n            // setReducer<string>(dashBoardActionCreator, 'setChoiceDate', '')\r\n            // setReducer<string>(dashBoardActionCreator, 'setPigeonLoftCode', '')\r\n        }\r\n    }, [clubCode,clubDate])\r\n\r\n    return (\r\n        <TableField {...TableFieldProps} />\r\n    )\r\n}\r\n\r\nexport default WrongSendMessage"],"names":["_useContext","useContext","ContextProps","$","setReducer","getReducer","timer","useRef","_getReducer","_ref","dashBoardChildWrongSendMessage","dashBoard","login","paginationObj","paginationOptions","wrongPigeonInductionData","choiceDate","choicePigeonLoftCode","clubCode","loginInfo","fromListClub","club","clubDate","currentDate","reflashCount","filterOverTime","_useState","useState","currentRenderItem","sortColumn","reverseSort","_useState2","_slicedToArray","_useState2$","setPageState","TableFieldProps","_objectSpread","gridHeaderItem","gridHeaderWidth","renderHeaderItem","maps","columnName","_ref2","index","_jsxs","className","onClick","prevState","children","_jsx","FontAwesomeIcon","icon","faSort","gridBodyItem","renderBodyItem","length","item","style","gridTemplateColumns","rowNum","pigeon_loft","pigeon_number","pigeon_aluminum","get_web_Induction_date","reset_get_web_Induction_date","reset_error_range_time","split","at","induction_date","reset_induction_date","aluminum_UID","latitude","longitude","postNext","pageObj","actionCreator","clearInterval","current","setInterval","dashBoardActionCreator","date","useEffect","pages","partPage","pageSize","_paginations","paginations","currentData","filter","match","sort","_toConsumableArray","a","b","parseInt","Date","prevRange","nextRange","filterRenderData","renderItem","TableField"],"sourceRoot":""}