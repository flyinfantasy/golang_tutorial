{"version":3,"file":"static/js/708.4565c72a.chunk.js","mappings":"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","sources":["container/DashBoard/children/PigeonStatus/PigeonStatus.tsx"],"sourcesContent":["import { FC, memo, useContext, useEffect, useRef, useState } from \"react\";\nimport { paginations } from \"../../../../component/TableField\";\nimport { TableField } from \"../../../../component\";\nimport { paginationOptions, paginationType, TableFieldProps } from \"../../../../component/TableField/types\";\nimport { ContextProps } from \"../../../../App\";\nimport { actionCreator,returnStateType, pigeonStatusDataType } from \".\";\nimport { actionCreator as dashBoardActionCreator } from '../../'\nimport { faSort } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { useLocation } from \"react-router-dom\";\n\nconst PigeonStatus: FC= (): JSX.Element => {\n    const { $, setReducer, getReducer } = useContext(ContextProps)\n    // const { search: queryParams } = useLocation()\n\n    const timer = useRef<NodeJS.Timer | null>(null)\n\n    const {\n        paginationObj,\n        paginationOptions,\n        pigeonStatusData,\n        // pigeonStatusDataInChoiceDate,\n        choiceDate,\n        choicePigeonLoftCode,\n        clubCode,\n        clubDate,\n        reflashCount\n    } = getReducer<returnStateType>(({ dashBoardChildPigeonStatus, dashBoard,login }) => ({\n        paginationObj: dashBoardChildPigeonStatus.paginationObj,\n        paginationOptions: dashBoardChildPigeonStatus.paginationOptions,\n        pigeonStatusData: dashBoardChildPigeonStatus.pigeonStatusData,\n        // pigeonStatusDataInChoiceDate: dashBoardChildPigeonStatus.pigeonStatusDataInChoiceDate,\n        choiceDate: dashBoard.choiceDate,\n        choicePigeonLoftCode: dashBoard.choicePigeonLoftCode,\n        clubCode: login.loginInfo.fromListClub || login.loginInfo.club,\n        clubDate: login.loginInfo.currentDate,\n        reflashCount: dashBoard.reflashCount,\n    }))\n\n    const [{\n        currentRenderItem,\n        sortColumn,\n        reverseSort\n    }, setPageState] = useState<{\n        currentRenderItem: any[],\n        sortColumn:string,\n        reverseSort: boolean\n    }>({\n        currentRenderItem: [],\n        sortColumn: '',\n        reverseSort: false\n    })\n\n    // const gridHeaderGroup: {[key:string]:any}[] = ['筆數', '鴿舍編號', '掌中寶時間', '經度', '緯度', '訊號強度', '電量', '充電']\n\n    const gridHeaderGroup: { sortColumn:string,columnName:string }[] = [{\n        sortColumn: 'rowNum',\n        columnName: '筆數'\n    }, {\n        sortColumn: 'pigeon_loft',\n        columnName: '鴿舍編號'\n    }, {\n        sortColumn: 'reset_server_receive_date_time',\n        columnName: '掌中寶時間'\n    }, {\n        sortColumn: '',\n        columnName: '經度'\n    }, {\n        sortColumn: '',\n        columnName: '緯度'\n    }, {\n        sortColumn: 'signal_strength',\n        columnName: '訊號強度'\n    }, {\n        sortColumn: 'electricity',\n        columnName: '電量'\n    }, {\n        sortColumn: 'plugged_in',\n        columnName: '充電'\n    }]\n\n    const TableFieldProps: TableFieldProps = {\n        gridHeaderItem: {\n            gridHeaderWidth: ['minmax(85px, 5%)', 'minmax(156px, 12.5%)', 'minmax(156px, 12.5%)', 'minmax(202px, 16.25%)', 'minmax(202px, 16.25%)', 'minmax(156px, 12.5%)', 'minmax(156px, 12.5%)', 'minmax(156px, 12.5%)'],\n            renderHeaderItem: $.maps(gridHeaderGroup, ({ sortColumn,columnName }: { sortColumn:string,columnName:string }, index: number) => (\n                <div\n                    key={index}\n                    className={sortColumn ? 'use-sort' : ''}\n                    onClick={() => setPageState(prevState => ({ ...prevState,sortColumn,reverseSort: !reverseSort }))} \n                >{columnName}{sortColumn ? <FontAwesomeIcon icon={faSort} /> : ''}</div>\n            ))\n        },\n        gridBodyItem: {\n            renderBodyItem: $.maps(currentRenderItem, (item: pigeonStatusDataType, index: number) => (\n                <div className={index % 2 !== 0 ? \"table-grid-body-column bg-double\" : \"table-grid-body-column bg-single\"} style={{\n                    gridTemplateColumns: 'minmax(85px, 5%) minmax(156px, 12.5%) minmax(156px, 12.5%) minmax(202px, 16.25%) minmax(202px, 16.25%) minmax(156px, 12.5%) minmax(156px, 12.5%) minmax(156px, 12.5%)'\n                }} key={index}>\n                    <div>{item.rowNum}</div>\n                    <div>{item.pigeon_loft}</div>\n                    <div className={item.reset_server_receive_date_time.split('|').at(0)}>{item.reset_server_receive_date_time.split('|').at(1)}</div>\n                    <div>{item.latitude}</div>\n                    <div>{item.longitude}</div>\n                    <div className={$.convert<number>(item.signal_strength, 'number')! <= 20 ? 'red-sign' : ''}>{item.signal_strength}</div>\n                    <div className={$.convert<number>(item.electricity, 'number')! <= 40 ? 'red-sign' : ''}>{item.electricity}</div>\n                    <div>{$.convert<boolean>($.convert<number>(item.plugged_in, 'number'), 'boolean') ? \"插電\" : \"未插電\"}</div>\n                </div>\n            ))\n        },\n        ...paginationObj,\n        postNext: pageObj => setReducer<paginationOptions>(actionCreator, 'setPigeonStatusPaginationOptions', pageObj),\n    }\n\n    const filterRenderData: () => pigeonStatusDataType[] = () => {\n        const currentData = choicePigeonLoftCode ? $.filter(pigeonStatusData, (item: pigeonStatusDataType) => item.pigeon_loft.match(choicePigeonLoftCode)) : pigeonStatusData\n        \n        return $.sort([...currentData],(a:pigeonStatusDataType,b:pigeonStatusDataType):any => {\n            return {\n                '': a.rowNum! - b.rowNum!,\n                'rowNum': reverseSort ? b.rowNum! - a.rowNum! : a.rowNum! - b.rowNum!,\n                'pigeon_loft': reverseSort ? parseInt(a.pigeon_loft) - parseInt(b.pigeon_loft) : parseInt(b.pigeon_loft) - parseInt(a.pigeon_loft),\n                'reset_server_receive_date_time': (() => {\n                    const prevRange = a.reset_server_receive_date_time.split('|').at(-1)!\n                    const nextRange = b.reset_server_receive_date_time.split('|').at(-1)!\n    \n                    return reverseSort ? parseInt(prevRange) - parseInt(nextRange) : parseInt(nextRange) - parseInt(prevRange)\n                })(),\n                'signal_strength': reverseSort ? parseInt(a.signal_strength) - parseInt(b.signal_strength) : parseInt(b.signal_strength) - parseInt(a.signal_strength),\n                'electricity': reverseSort ? parseInt(a.electricity) - parseInt(b.electricity) : parseInt(b.electricity) - parseInt(a.electricity),\n                'plugged_in': reverseSort ? parseInt(a.plugged_in) - parseInt(b.plugged_in) : parseInt(b.plugged_in) - parseInt(a.plugged_in)\n            }[sortColumn]\n        }) as pigeonStatusDataType[]\n    }\n\n    clearInterval(timer.current!)\n\n    timer.current = setInterval(() => {\n        if (reflashCount === 0) {\n            // if(caches){\n            //     caches.keys().then((names) => {\n            //         names.forEach((name) => {\n            //             caches.delete(name);\n            //         });\n            //     });\n            // }\n\n            setReducer(dashBoardActionCreator,'setReflashCount',10)\n\n            setReducer(actionCreator, 'getPigeonStateData', { club: clubCode, date: choiceDate || clubDate })\n            // if (process.env.REACT_APP_NODE_ENV === 'pdt') {\n            //     choiceDate ? setReducer(actionCreator, 'getPigeonInductionInChoiceDate', choiceDate) : setReducer(actionCreator, 'getPigeonInductionData')\n            // } else {\n            //     // test server\n            //     // 臨時設定登入功能完成後會移除\n            //     choiceDate ? setReducer(actionCreator, 'getPigeonInductionInChoiceDateTest', { choiceDate, routerParmas: { club: clubCode, date: clubDate } }) : setReducer<any>(actionCreator, 'getPigeonInductionDataTest', { club: clubCode, date: clubDate })\n            // }\n            \n            // window.location.replace(pathname)\n        } else {\n            setReducer(dashBoardActionCreator,'setReflashCount',reflashCount - 1)\n        }\n    }, 1000)\n\n    useEffect(() => {\n        const { pages, partPage, pageSize } = paginationOptions\n        const { pageObj, renderItem } = paginations(filterRenderData(), pages, partPage, pageSize)\n        setPageState(prevState => ({\n            ...prevState,\n            currentRenderItem: renderItem\n        }))\n        setReducer<paginationType>(actionCreator, 'setPigeonStatusPaginationObj', {...pageObj})\n    }, [paginationOptions, pigeonStatusData, choicePigeonLoftCode, reverseSort])\n\n    useEffect(() => {\n        setReducer(dashBoardActionCreator,'setReflashCount',10)\n\n        if(clubCode && clubDate) setReducer(actionCreator,'getPigeonStateData', { club: clubCode, date: choiceDate || clubDate })\n            // choiceDate ? setReducer(actionCreator, 'getPigeonInductionInChoiceDate', { choiceDate, routerParmas: { club: clubCode, date: clubDate } }) : setReducer<any>(actionCreator, 'getPigeonInductionData', { club: clubCode, date: clubDate })\n        // if (process.env.REACT_APP_NODE_ENV === 'pdt') {\n        //     choiceDate ? setReducer(actionCreator, 'getPigeonInductionInChoiceDate', choiceDate) : setReducer(actionCreator, 'getPigeonInductionData')\n        // } else {\n        //     // test server\n        //     // 臨時設定登入功能完成後會移除\n        //     if(!clubCode && !clubDate) return\n        //     choiceDate ? setReducer(actionCreator, 'getPigeonInductionInChoiceDateTest', { choiceDate, routerParmas: { club: clubCode, date: clubDate } }) : setReducer<any>(actionCreator, 'getPigeonInductionDataTest', { club: clubCode, date: clubDate })\n        // }\n    }, [choiceDate,reverseSort])\n\n    // useEffect(() => {\n    //     setReflashCountProps(10)\n    // }, [choicePigeonLoftCode])\n\n    useEffect(() => {\n        if(!clubCode && !clubDate) return\n\n        setReducer(dashBoardActionCreator,'setReflashCount',10)\n\n        setReducer<paginationOptions>(actionCreator, 'setPigeonStatusPaginationOptions', {\n            pages: 1,\n            partPage: 10,\n            pageSize: 10\n        })\n\n        setReducer(actionCreator, 'getPigeonStateData',{ club: clubCode, date: choiceDate || clubDate })\n\n        return () => {\n            clearInterval(timer.current!)\n            // setReducer<string>(dashBoardActionCreator, 'setChoiceDate', '')\n            // setReducer<string>(dashBoardActionCreator, 'setPigeonLoftCode', '')\n        }\n    }, [clubCode,clubDate])\n\n    return (\n        <TableField {...TableFieldProps} />\n    )\n}\n\nexport default memo(PigeonStatus)"],"names":["PigeonStatus","_useContext","useContext","ContextProps","$","setReducer","getReducer","timer","useRef","_getReducer","_ref","dashBoardChildPigeonStatus","dashBoard","login","paginationObj","paginationOptions","pigeonStatusData","choiceDate","choicePigeonLoftCode","clubCode","loginInfo","fromListClub","club","clubDate","currentDate","reflashCount","_useState","useState","currentRenderItem","sortColumn","reverseSort","_useState2","_slicedToArray","_useState2$","setPageState","TableFieldProps","_objectSpread","gridHeaderItem","gridHeaderWidth","renderHeaderItem","maps","columnName","_ref2","index","_jsxs","className","onClick","prevState","children","_jsx","FontAwesomeIcon","icon","faSort","gridBodyItem","renderBodyItem","item","style","gridTemplateColumns","rowNum","pigeon_loft","reset_server_receive_date_time","split","at","latitude","longitude","convert","signal_strength","electricity","plugged_in","postNext","pageObj","actionCreator","clearInterval","current","setInterval","dashBoardActionCreator","date","useEffect","pages","partPage","pageSize","_paginations","paginations","currentData","filter","match","sort","_toConsumableArray","a","b","parseInt","prevRange","nextRange","filterRenderData","renderItem","TableField","memo"],"sourceRoot":""}